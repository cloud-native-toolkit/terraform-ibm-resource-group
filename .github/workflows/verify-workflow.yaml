name: Verify

# Controls when the action will run.
on:
  workflow_call:
    secrets:
      IBMCLOUD_API_KEY:
        required: true
      GIT_ORG:
        required: true
      GIT_ADMIN_USERNAME:
        required: true
      GIT_ADMIN_TOKEN:
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  verify:
    if: ${{ !contains( github.event.pull_request.labels.*.name, 'skip ci' ) }}
    runs-on: ubuntu-latest
    container: quay.io/cloudnativetoolkit/terraform:v1.2

    strategy:
      matrix:
        testcase:
          - ocp4_latest
        volumes:
          - create
          - no create
      fail-fast: false
      max-parallel: 1

    env:
      HOME: /home/devops

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - id: variables
        name: Set up variables
        env:
          GIT_ORG: ${{ secrets.GIT_ORG }}
          GITU_CONFIG: ${{ secrets.GITU_CONFIG }}
          GIT_PROJECT: ${{ secrets.GIT_PROJECT }}
        shell: bash
        run: |
          if [[ "${{ matrix.volumes }}" == "create" ]]; then
            CREATE_VOLUME="true"
          else
            CREATE_VOLUME="false"
          fi
          
          echo "Create volume: ${CREATE_VOLUME}"
          echo "::set-output name=create_volume::$CREATE_VOLUME"

      - name: Verify deploy on ${{ matrix.testcase }}
        uses: cloud-native-toolkit/action-module-verify-deploy@main
        with:
          clusterId: ${{ matrix.testcase }}
          validateDeployScript: .github/scripts/validate-deploy.sh
        env:
          TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
          IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
          TF_VAR_create_volume: ${{ steps.variables.outputs.create_volume }}

      - name: Verify destroy on ${{ matrix.testcase }}
        uses: cloud-native-toolkit/action-module-verify-destroy@main
        if: ${{ always() }}
        with:
          clusterId: ${{ matrix.testcase }}
        env:
          TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
          IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
          TF_VAR_create_volume: ${{ steps.variables.outputs.create_volume }}
